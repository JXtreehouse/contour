import d3 from 'd3';
import * as nwt from '../utils/contour-utils';
import Contour from '../core/contour';

function pxToNumber(pixels) {
    // removes 'px' from end of padding -- padding is always translated into px
    return Number(pixels.slice(0, -2));
}

function title(data, layer, options) {
    if (options.title.styles === undefined) {
        options.title.styles = {};
    }

    var svg = d3.select(this.container[0][0].firstChild);
    var height = pxToNumber(svg.style('height'));
    var width = pxToNumber(svg.style('width'));
    var paddingTop = svg.style('padding-top');

    if (paddingTop === '0px') {
        svg.style('padding-top', '2rem');
        paddingTop = '32px';
    }

    paddingTop = pxToNumber(paddingTop);

    var xVal;
    var yVal = -paddingTop / 2;

    switch (options.title.position) {
        case 'center':
            xVal = width / 2;
            options.title.styles["text-anchor"] = "middle";
            break;
        case 'right':
            xVal = width;
            options.title.styles["text-anchor"] = "end";
            break;
        default:
            xVal = 0;
            break;
    }
    svg.append('text')
        .attr('x', xVal)
        .attr('y', yVal)
        .style(options.title.styles)
        .text(options.title.text);
}

title.defaults = {
    text: '',
    position: 'left'
};

/**
* Adds a title to the Contour chart.
*
* **Note:** This chart will appear in images generated by `exportable`.
*
* ### Example:
*
*        new Contour({el: '.myChart', title: { text}})
*           .cartesian()
*           .trendLine([2,4,3,5,7])
*           .title()
*           .render();
*
* @name trendLine(text, position, styles)
* @param {string} text The text to be displayed
* @param {string} position The horizontal position of the title. Can be `left` (default), `center`, or `right`.
* @param {object} styles An object contianing styles that will be applied to the title text.
* @api public
*
*/

Contour.export('title', title);
